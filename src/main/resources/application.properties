# --- Configuração do Serviço de Animais ---
quarkus.application.name=meupet-animals-api
quarkus.http.port=8080
quarkus.http.host=0.0.0.0

# --- Banco de Dados ---
# --- Configuração do Banco de Dados PostgreSQL ---
quarkus.datasource.db-kind=postgresql
# O Quarkus pode usar a variável de ambiente DATABASE_URL automaticamente.
# Não defina username, password ou jdbc.url aqui em produção,
# deixe o Render injetar a DATABASE_URL
# Se precisar de um valor default para desenvolvimento local (docker-compose), pode deixar assim:
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/meupet_db
#quarkus.datasource.username=postgres
#quarkus.datasource.password=postgres

# Configurações do Hibernate ORM
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.sql-load-script=no-file

# --- Configuração do JWT (Apenas VERIFICAÇÃO) ---
# Este serviço usa a mesma chave pública e issuer para validar os tokens
mp.jwt.verify.publickey.location=jwt/publicKey.pem
mp.jwt.verify.issuer=https://meupet.api/issuer

# --- Configuração do REST Client para a API de Usuários ---
# Aponta para a URL onde o meupet-users-api está rodando
quarkus.rest-client."com.animals.api.client.UsuarioRestClient".url=${QUARKUS_REST_CLIENT_COM_MEUPET_API_CLIENT_USUARIORESTCLIENT_URL:http://localhost:8082}


# Swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/docs
quarkus.smallrye-openapi.path=/openapi